worker_processes auto;
pid /run/nginx.pid;
# include /etc/nginx/modules-enabled/*;
load_module modules/ngx_http_modsecurity_module.so;

events {
	worker_connections 768;
	# multi_accept on;
}

http {

	##
	# Basic Settings
	##

	sendfile on;
	tcp_nopush on;
	types_hash_max_size 2048;
	# server_tokens off;

	# server_names_hash_bucket_size 64;
	# server_name_in_redirect off;

	include /etc/nginx/mime.types;
	default_type application/octet-stream;

	##
	# Logging Settings
	##
	access_log /var/log/nginx/access.log;
	error_log /var/log/nginx/error.log;

	# include /etc/nginx/conf.d/*.conf;

	# configure une zone de limitation de fréquence pour contrôler le nombre de requêtes par seconde que les adresses IP 
	limit_req_zone $binary_remote_addr zone=mylimit:10m rate=10r/s;

	server {
		listen 80 default_server;
		# Redirection de toutes les demandes HTTP vers HTTPS en utilisant une réponse de redirection 301.
		return 301 https://$host$request_uri; # Redirect HTTP to HTTPS
	}

	server {
		#SSL configuration
		listen 443 ssl default_server;
		listen [::]:443 ssl default_server;

		ssl_certificate /etc/ssl/certs/nginx-selfsigned.crt; 
		ssl_certificate_key /etc/ssl/kprivkpub.key;
		
		modsecurity on;

		##
		# SSL Settings
		##
		# Autres directives SSL pour améliorer la sécurité (optionnel mais recommandé)
		ssl_protocols TLSv1.2 TLSv1.3;
		ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';
		ssl_prefer_server_ciphers off;
		ssl_session_cache shared:SSL:10m;

		resolver 8.8.8.8 8.8.4.4 valid=300s; # Utilisez des serveurs DNS valides pour la résolution, par exemple ceux de Google : 8.8.8.8 8.8.4.4
		resolver_timeout 5s;


		#root /var/www/html;

		# Add index.php to the list if you are using PHP
		index index.html index.htm index.nginx-debian.html;

		location / {
			# First attempt to serve request as file, then
			# as directory, then fall back to displaying a 404.
			#try_files $uri $uri/ =404;
			proxy_pass http://localhost:8000;
			modsecurity_rules_file /etc/nginx/modsec/main.conf;
			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection 'upgrade';
			proxy_set_header Host $host;
			proxy_cache_bypass $http_upgrade;
			proxy_hide_header X-Powered-By;
		}

		#  en-têtes de sécurité pour renforcer la sécurité du serveur, y compris la politique de sécurité du contenu, la politique de transport strict, etc.
		add_header X-Frame-Options "SAMEORIGIN";
		add_header X-XSS-Protection "1; mode=block";
		add_header X-Content-Type-Options "nosniff";
		add_header Content-Security-Policy "default-src 'self'; img-src 'self' data:; frame-ancestors 'self';";
		add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload";
		add_header Referrer-Policy "no-referrer";
		add_header Permissions-Policy "geolocation=(), microphone=(), camera=(), magnetometer=(), gyroscope=(), speaker=(), vibrate=(), fullscreen=(), payment=()";
		add_header X-Download-Options "noopen";
		add_header X-Permitted-Cross-Domain-Policies "none";
		add_header X-Robots-Tag "none";
		
		# Vérification de la méthode de requête HTTP et retourne une réponse 405 (Méthode non autorisée) si elle n'est pas GET, HEAD ou POST.
		if ($request_method !~ ^(GET|HEAD|POST|DELETE)$ ) {
			return 405;
		}

		# Configurations liées à la gestion de la taille du corps de la requête, des délais et des délais de réponse.
		client_max_body_size 10M;
		client_body_timeout 10;
		client_header_timeout 10;
		keepalive_timeout 5 5;
		send_timeout 10;

		##
		# Gzip Settings
		##
		# Configuration de la compression Gzip pour économiser la bande passante en compressant les données envoyées au client: 
		# plus de charge pour le serveur mais requêtes plus rapides		
		gzip on;
		gzip_vary on;
		gzip_proxied any;
		gzip_comp_level 6;
		gzip_types text/plain text/css text/xml application/json application/javascript application/xml+rss application/atom+xml image/svg+xml;
	}
}